library(plotly)
font_add_google("Montserrat")
showtext_auto()
pp_blue = "#006288"
img <- png::readPNG("images/PP_znak_konturowy_RGB.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
#-------------------------------------------------------------------------------
gold <- read.csv("Gold prices.csv")
tidy_gold <- gold %>%
gather("currency", "value", 2:7)
tidy_gold$Date <- as.Date(tidy_gold$Date, '%Y-%m-%d')
x_from = as.Date('2000-01-01', '%Y-%m-%d')
x_from2 = as.Date('2017-01-01', '%Y-%m-%d')
x_to = as.Date('2021-09-01', '%Y-%m-%d')
x_to2 = as.Date('2015-01-01', '%Y-%m-%d')
tidy_gold %>%
filter(currency != "USD..PM." & currency != "GBP..PM." & currency != "EURO..PM.") %>%
ggplot(aes(x = Date, y=value, group = currency)) + geom_line(aes(col=factor(currency))) +
coord_cartesian(xlim=c(x_from,x_to)) +
ggtitle("GOLD PRICES", subtitle="2000 - 2021") + xlab("Year") + ylab("Value") +
scale_y_continuous(breaks=seq(0, 2100, 500), labels = function(x){paste0(x/1000, 'K')}) +
scale_color_manual(name="",
labels = c("Euro",
"Funt",
"Dollar"),
values = c("#2980b9",
"#7fb3d5",
"#839192")) +
theme_bw() +
theme(legend.position="bottom", legend.box = "horizontal") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank()) +
theme(legend.text = element_text(size=12))
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y")
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- as.Date(grouped_tidy_exchange$Date, '%m/%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
View(exchange)
View(tidy_exchange)
View(grouped_tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
grouped_tidy_exchange$Date <- as.Date(grouped_tidy_exchange$Date, '%m/%Y')
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, '%m/%Y')
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, format = '%m/%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%d/%m/%Y")
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, format = '%d/%m/%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y")
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, format = '%m/%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%Y")
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, format = '%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y")
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
grouped_tidy_exchange$Date <- format(grouped_tidy_exchange$Date, format = '%m/%Y')
grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear')
tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y")
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange <- na.omit(tidy_exchange)
tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(g, renderer = gifski_renderer())
g <- tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(g, renderer = gifski_renderer())
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y") #problematic line
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%m/%Y')
tidy_exchange <- na.omit(tidy_exchange)
g <- tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(g, renderer = gifski_renderer())
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y") #problematic line
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%m/%Y") #problematic line
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%m/%Y')
#-------------------------------------------------------------------------------
big <- read.csv("World_Development_Indicators.csv")
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_g <- tidy_big %>%
filter(tidy_big$Series.Code == "SP.POP.TOTL") %>%
ggplot(aes(x = Country.Name, y = value)) + geom_bar(stat = "identity") +
coord_flip() +
transition_time(year) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(tidy_g, renderer = gifski_renderer())
View(tidy_g)
View(tidy_g)
View(tidy_big)
bh_diff <- read.csv("Bitcoin/BCHAIN-DIFF.CSV")
bh_hrate <- read.csv("Bitcoin/BCHAIN-HRATE.CSV")
bh_mkpru <- read.csv("Bitcoin/BCHAIN-MKPRU.CSV")
bh_trvou <- read.csv("Bitcoin/BCHAIN-TRVOU.CSV")
names(bh_diff)[2] <- "Difficulty" #How difficult is to find a new block
names(bh_hrate)[2] <- "Hash Rate"  #The estimated number of tera hashes per second
names(bh_mkpru)[2] <- "Market Price USD" #Average USD market price across major bitcoin exchanges.
names(bh_trvou)[2] <- "USD Exchange Trade Volume" #The total USD value of trading volume on major bitcoin exchanges.
blockchain <- left_join(bh_mkpru, bh_trvou, by = "Date")
blockchain <- left_join(blockchain, bh_diff, by = "Date")
blockchain <- left_join(blockchain, bh_hrate, by = "Date")
blockchain$Date <- as.Date(blockchain$Date, '%Y-%m-%d')
tidy_blockchain <- blockchain %>%
gather("Rate", "value", 2:5)
g <- tidy_blockchain %>%
ggplot(aes(x = Date, y = value)) + geom_line(aes(col = factor(Rate))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
theme(legend.position="None") +
scale_color_manual(name="",
labels = c("",
"",
"",
""),
values = c("#2980b9",
"#7fb3d5",
"#aab7b8",
pp_blue)) +
facet_wrap(~ Rate, scales = "free") +
ggtitle("BITCOIN RATES", subtitle="2009 - 2021") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue))
ggplotly(g)
View(big)
library(showtext)
library(ggplot2)
library(dplyr)
library(tidyr)
library(png)
library(grid)
library(gganimate)
library(gifski)
library(scales)
library(plotly)
font_add_google("Montserrat")
showtext_auto()
pp_blue = "#006288"
img <- png::readPNG("images/PP_znak_konturowy_RGB.png")
g_pic <- rasterGrob(img, interpolate=TRUE)
#-------------------------------------------------------------------------------
gold <- read.csv("Gold prices.csv")
tidy_gold <- gold %>%
gather("currency", "value", 2:7)
tidy_gold$Date <- as.Date(tidy_gold$Date, '%Y-%m-%d')
x_from = as.Date('2000-01-01', '%Y-%m-%d')
x_from2 = as.Date('2017-01-01', '%Y-%m-%d')
x_to = as.Date('2021-09-01', '%Y-%m-%d')
x_to2 = as.Date('2015-01-01', '%Y-%m-%d')
tidy_gold %>%
filter(currency != "USD..PM." & currency != "GBP..PM." & currency != "EURO..PM.") %>%
ggplot(aes(x = Date, y=value, group = currency)) + geom_line(aes(col=factor(currency))) +
coord_cartesian(xlim=c(x_from,x_to)) +
ggtitle("GOLD PRICES", subtitle="2000 - 2021") + xlab("Year") + ylab("Value") +
scale_y_continuous(breaks=seq(0, 2100, 500), labels = function(x){paste0(x/1000, 'K')}) +
scale_color_manual(name="",
labels = c("Euro",
"Funt",
"Dollar"),
values = c("#2980b9",
"#7fb3d5",
"#839192")) +
theme_bw() +
theme(legend.position="bottom", legend.box = "horizontal") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue)) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank()) +
theme(legend.text = element_text(size=12))
annotation_custom(g_pic, xmin=x_from2, xmax=x_to, ymin=0, ymax=750)
exchange <- read.csv("CurrencyExchangeRates.csv")
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange <- na.omit(tidy_exchange)
g <- tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(g, renderer = gifski_renderer())
View(tidy_exchange)
#-------------------------------------------------------------------------------
big <- read.csv("World_Development_Indicators.csv")
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_g <- tidy_big %>%
filter(tidy_big$Series.Code == "SP.POP.TOTL") %>%
ggplot(aes(x = Country.Name, y = value)) + geom_bar(stat = "identity") +
coord_flip() +
transition_time(year) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(tidy_g, renderer = gifski_renderer())
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_big$year <- as.integer(tidy_big$year)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
#-------------------------------------------------------------------------------
big <- read.csv("World_Development_Indicators.csv")
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
#tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_big = mutate(tidy_big, year=as.integer(year))
tidy_big <- big %>%
gather("year", "value", 5:55)
tidy_big$year <- as.Date(tidy_big$year, 'X%Y..YR%Y.')
tidy_big$year <- format(tidy_big$year, format = "%Y") #The same problem as in the previous case :/
tidy_big = mutate(tidy_big, year=as.integer(year))
tidy_g <- tidy_big %>%
filter(tidy_big$Series.Code == "SP.POP.TOTL") %>%
ggplot(aes(x = Country.Name, y = value)) + geom_bar(stat = "identity") +
coord_flip() +
transition_time(year) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(tidy_g, renderer = gifski_renderer())
bh_diff <- read.csv("Bitcoin/BCHAIN-DIFF.CSV")
bh_hrate <- read.csv("Bitcoin/BCHAIN-HRATE.CSV")
bh_mkpru <- read.csv("Bitcoin/BCHAIN-MKPRU.CSV")
bh_trvou <- read.csv("Bitcoin/BCHAIN-TRVOU.CSV")
names(bh_diff)[2] <- "Difficulty" #How difficult is to find a new block
names(bh_hrate)[2] <- "Hash Rate"  #The estimated number of tera hashes per second
names(bh_mkpru)[2] <- "Market Price USD" #Average USD market price across major bitcoin exchanges.
names(bh_trvou)[2] <- "USD Exchange Trade Volume" #The total USD value of trading volume on major bitcoin exchanges.
blockchain <- left_join(bh_mkpru, bh_trvou, by = "Date")
blockchain <- left_join(blockchain, bh_diff, by = "Date")
blockchain <- left_join(blockchain, bh_hrate, by = "Date")
blockchain$Date <- as.Date(blockchain$Date, '%Y-%m-%d')
tidy_blockchain <- blockchain %>%
gather("Rate", "value", 2:5)
g <- tidy_blockchain %>%
ggplot(aes(x = Date, y = value)) + geom_line(aes(col = factor(Rate))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
theme(legend.position="None") + #Why this not desaperas :<
scale_color_manual(name="",
labels = c("",
"",
"",
""),
values = c("#2980b9",
"#7fb3d5",
"#aab7b8",
pp_blue)) +
facet_wrap(~ Rate, scales = "free") +
ggtitle("BITCOIN RATES", subtitle="2009 - 2021") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue))
ggplotly(g)
tidy_blockchain %>%
ggplot(aes(x = Date, y = value)) + geom_line(aes(col = factor(Rate))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
theme(legend.position="None") + #Why this not desaperas :<
scale_color_manual(name="",
labels = c("",
"",
"",
""),
values = c("#2980b9",
"#7fb3d5",
"#aab7b8",
pp_blue)) +
facet_wrap(~ Rate, scales = "free") +
ggtitle("BITCOIN RATES", subtitle="2009 - 2021") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue))
g <- tidy_blockchain %>%
ggplot(aes(x = Date, y = value)) + geom_line(aes(col = factor(Rate))) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()) +
theme(legend.position="None") + #Why this not desaperas :<
scale_color_manual(name="",
labels = c("",
"",
"",
""),
values = c("#2980b9",
"#7fb3d5",
"#aab7b8",
pp_blue)) +
facet_wrap(~ Rate, scales = "free") +
ggtitle("BITCOIN RATES", subtitle="2009 - 2021") +
theme(plot.title = element_text(size = 30,
family = "Montserrat",
color = pp_blue,
face = "bold"),
plot.subtitle = element_text(size = 15,
family = "Calibri",
color = pp_blue))
ggplotly(g)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%Y") #problematic line
exchange <- read.csv("CurrencyExchangeRates.csv")
tidy_exchange <- exchange %>%
gather("currency", "value", 2:52)
tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%Y-%m-%d')
tidy_exchange$Date <- format(tidy_exchange$Date, format = "%Y") #problematic line
#tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%m/%Y') #why this leads to NA ????
tidy_exchange = mutate(tidy_exchange, Date=as.integer(year))
#tidy_exchange$Date <- as.Date(tidy_exchange$Date, '%m/%Y') #why this leads to NA ????
tidy_exchange = mutate(tidy_exchange, Date=as.integer(Date))
tidy_exchange <- na.omit(tidy_exchange)
grouped_tidy_exchange <- tidy_exchange %>%
group_by(Date, currency, .add = TRUE) %>%
summarise(value = mean(value))
g <- grouped_tidy_exchange %>%
ggplot(aes(x = currency, y = value, frame = Date)) + geom_bar(stat = "identity") +
scale_y_continuous(trans = 'log2') +
coord_flip() +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
animate(g, renderer = gifski_renderer())
